; This is the form for creating, updating, and reading user account information.
; This form should be loaded through FormManager::loadForm() in order to recieve
; the proper decorators, filters, etc.
;
; Author    Mark E. Haase <mhaase@endeavorsystems.com
; Copyright (c) Endeavor Systems, Inc. 2008 (http://www.endeavorsystems.com)
; License   http://www.openfisma.org/mw/index.php?title=License
; Version   $Id:$

; The username, password, and ldap fields are all defined here for the sake of
; simplicity, but at runtime the account controller will strip out the fields
; which do not apply to the current authentication schema (ldap or database)

[account]
elementPrefixPath.prefix = Fisma_Form
elementPrefixPath.path = Fisma/Form
elementPrefixPath.type = Validate

elements.username.type = "text"
elements.username.options.label = "Username"
elements.username.options.required = true
elements.username.options.attribs.size = 35
elements.username.options.filters.lower.filter = "StringToLower"
displayGroups.accountInfo.elements.username = "username"

elements.password.type = "password"
elements.password.options.label = "Password"
elements.password.options.attribs.id = "password"
elements.password.options.attribs.size = 35
elements.password.options.validators.a = Password
displayGroups.accountInfo.elements.password = "password"

elements.confirmPassword.type = "password"
elements.confirmPassword.options.label = "Confirm Password"
elements.confirmPassword.options.attribs.id = "confirmPassword"
elements.confirmPassword.options.attribs.size = 35
displayGroups.accountInfo.elements.confirmPassword = "confirmPassword"

elements.generate_password.type = "Form_Button"
elements.generate_password.options.label = "Generate Password"
elements.generate_password.options.onClickFunction = "GeneratePassword"
elements.generate_password.options.attribs.id = "generatePasswordButton"
displayGroups.accountInfo.elements.generate_password = "generate_password"

elements.checkAccount.type = "Form_Button"
elements.checkAccount.options.label = "Check Account"
elements.checkAccount.options.onClickFunction = "check_account"
displayGroups.accountInfo.elements.checkAccount = "checkAccount"

elements.nameFirst.type = "text"
elements.nameFirst.options.label = "First Name"
elements.nameFirst.options.required = true
elements.nameFirst.options.attribs.size = 35
displayGroups.accountInfo.elements.nameFirst = "nameFirst"

elements.nameLast.type = "text"
elements.nameLast.options.label = "Last Name"
elements.nameLast.options.required = true
elements.nameLast.options.attribs.size = 35
displayGroups.accountInfo.elements.nameLast = "nameLast"

elements.phoneOffice.type = "text"
elements.phoneOffice.options.label = "Office Phone"
elements.phoneOffice.options.attribs.size = 35
displayGroups.accountInfo.elements.phoneOffice = "phoneOffice"

elements.phoneMobile.type = "text"
elements.phoneMobile.options.label = "Mobile Phone"
elements.phoneMobile.options.attribs.size = 35
displayGroups.accountInfo.elements.phoneMobile = "phoneMobile"

elements.email.type = "text"
elements.email.options.label = "E-Mail"
elements.email.options.required = true
elements.email.options.attribs.size = 35
elements.email.options.validators.email.validator = "EmailAddress"
displayGroups.accountInfo.elements.email = "email"

; The roles are populated dynamically in the account controller since they can
; change at any time.
elements.role.type = "multiselect"
elements.role.options.label = "Role(s)"
elements.role.options.required = true
elements.role.options.size = 5
displayGroups.accountInfo.elements.roles = "role"

elements.title.type = "text"
elements.title.options.label = "Title"
elements.title.options.attribs.size = 35
displayGroups.accountInfo.elements.title = "title"

; The values in the status menu are static so it is hardcoded here.
; (ie. "Active" and "Locked").
elements.locked.type = "select"
elements.locked.options.label = "Status"
elements.locked.options.multioptions.0 = Active
elements.locked.options.multioptions.1 = Locked
; This default is overridden if in edit or view mode
elements.locked.options.value = "0"
displayGroups.accountInfo.elements.locked = "locked"

elements.lockReason.type = "Element_ConstantText"
elements.lockReason.options.label = "Lock Reason"
displayGroups.accountInfo.elements.lockReason = "lockReason"

elements.lockTs.type = "Element_ConstantText"
elements.lockTs.options.label = "Lock Timestamp"
displayGroups.accountInfo.elements.lockTs = "lockTs"

elements.save.type = "Form_Button_Submit"
elements.save.options.label = "Save"
displayGroups.accountInfo.elements.save = "save"

; The systems part of the account form is generated dynamically at runtime
