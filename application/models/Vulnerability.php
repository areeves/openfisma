<?php
/**
 * Copyright (c) 2011 Endeavor Systems, Inc.
 *
 * This file is part of OpenFISMA.
 *
 * OpenFISMA is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * OpenFISMA is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with OpenFISMA.  If not, see
 * {@link http://www.gnu.org/licenses/}.
 */

/**
 * Vulnerability
 *
 * @author Christian Smith <christian.smith@endeavorsystems.com>
 * @copyright (c) Endeavor Systems, Inc. 2011 {@link http://www.endeavorsystems.com}
 * @license http://www.openfisma.org/content/license GPLv3
 * @package Model
 * @uses BaseVulnerability
 */

class Vulnerability extends BaseVulnerability implements Fisma_Zend_Acl_OrganizationDependency
{
    /**
     * Valid state transitions for any vulnerability object.
     *
     * The key is the "from" state and the value is an array of the valid "to" states. Any transition not
     * specified here is considered invalid.
     *
     * @var array
     */
    static private $_validStateTransitions = array(
        'FIXED' => array('OPEN'),
        'WONTFIX' => array('OPEN'),
        'OPEN' => array('FIXED', 'WONTFIX')
    );

    /**
     * Returns true if it is valid for a vulnerability to go from one state to another
     *
     * @param string $fromState
     * @param string $toState
     * @return bool
     */
    public function isValidStateTransition($fromState, $toState)
    {
        if (isset(self::$_validStateTransitions[$fromState]) &&
            in_array($toState, self::$_validStateTransitions[$fromState])) {

            return true;
        } else {
            return false;
        }
    }

    /**
     * Override BaseVulnerability::setUp to include custom mutators
     *
     * @return void
     */
    public function setUp()
    {
        parent::setUp();

        $this->hasMutator('status', 'setStatus');
    }

    /**
     * Custom mutator to set the closedTs field when status changes to CLOSED
     *
     * @param string $value Value to set
     * @return void
     */
    public function setStatus($value)
    {
        // Enforce state transition logic
        if (!$this->isValidStateTransition($this->status, $value)) {
            throw new Fisma_Zend_Exception("Invalid state transition for vulnerability from {$this->status} to $value");
        }

        if ($value == 'FIXED') {
            $this->closedTs = Fisma::now();
        }

        if ($value == 'OPEN') {
            $this->closedTs = null;
            $this->resolutionId = null;
        }

        // Update the value
        $this->_set('status', $value);
    }

    /**
     * Implement the required method for Fisma_Zend_Acl_OrganizationDependency
     *
     * @return int
     */
    public function getOrganizationDependencyId()
    {
        return $this->Asset->orgSystemId;
    }
}
