<?php
/**
 * Copyright (c) 2008 Endeavor Systems, Inc.
 *
 * This file is part of OpenFISMA.
 *
 * OpenFISMA is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * OpenFISMA is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with OpenFISMA.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @author    Ryan Yang <ryanyang@users.sourceforge.net>
 * @copyright (c) Endeavor Systems, Inc. 2008 (http://www.endeavorsystems.com)
 * @license   http://www.openfisma.org/mw/index.php?title=License
 * @version   $Id:$
 * @package   Model
 */
 
/**
 * LdapConfig
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package   Model
 * @copyright (c) Endeavor Systems, Inc. 2008 (http://www.endeavorsystems.com)
 * @license   http://www.openfisma.org/mw/index.php?title=License
 */
class LdapConfig extends BaseLdapConfig
{
    private $_mapLdap = array(
            'host' => 'host',
            'port' => 'port',
            'username' => 'username',
            'password' => 'password',
            'useSsl' => 'useSsl',
            'bindRequiresDn' => 'bindRequiresDn',
            'baseDn' => 'basedn',
            'accountFilterFormat' => 'accountFilter',
            'accountCanonicalForm' => 'accountCanonical',
            'accountDomainNameShort' => 'domainShort',
            'accountDomainName' => 'domainName'
    );
    
    /**
     *  Retrive the ldap configuration(s)
     *
     *  @param numeric $id default null the group id of ldap config
     *  @return array all the configurations of LDAP servers. One configuration 
     *      if the $id is specified. 
     */
    public function getLdaps($id = null)
    {
        if (is_array($id)) {
            $q = Doctrine_Query::create()
                           ->from('LdapConfig lc')
                           ->whereIn('lc.id', $id);
            $ldapConfigs = $q->execute();
        } elseif (is_numeric($id)) {
            $ldapConfigs[] = Doctrine::getTable('LdapConfig')->find($id);
        } else {
            $ldapConfigs = Doctrine::getTable('LdapConfig')->findAll();
        }
        $ldapData = array();
        $i = 0;
        foreach ($ldapConfigs as $ldapConfig) {
            foreach ($this->_mapLdap as $k => $v) {
                $ldapData[$i][$k] = $ldapConfig->$v;
            }
            $i ++;
        }
        return $ldapData;
    }
}
