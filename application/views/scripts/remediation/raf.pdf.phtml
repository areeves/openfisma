<?php
require_once ( 'pdf/class.ezpdf.php');

// These constants define the font size for various parts of the document.
!defined('TITLE_TEXT_SIZE') ? define('TITLE_TEXT_SIZE', 18) : true;
!defined('BODY_TEXT_SIZE') ? define('BODY_TEXT_SIZE', 10) : true;
!defined('FOOTER_TEXT_SIZE') ? define('FOOTER_TEXT_SIZE', 8) : true;
!defined('FONTS') ? define('FONTS', APPLICATION_ROOT . '/library/pdf/fonts') : true;

// These options are used repeatedly throughout the document for consistent formatting.
$headerOptions = array('showHeadings'=>0,
                       'fontSize' => BODY_TEXT_SIZE,
                       'width'=>500);
$labelOptions = array('showHeadings'=>0,
                      'shaded'=>0,
                      'showLines'=>0,
                      'fontSize' => BODY_TEXT_SIZE,
                      'width'=>500);
$tableOptions = array('showHeadings'=>0,
                      'shaded'=>0,
                      'showLines'=>2,
                      'fontSize' => BODY_TEXT_SIZE,
                      'protectRows' => 999, // Prevents tables from being split at page boundaries
                      'width'=>400
                      );
$bodyTextOptions = array('left' => 25, // The left and right margin will align the body text with the headers
                         'right' => 25);

$p = &$this->poam ; //alias
$sys = new System();
$rows = $sys->find($p['system_id']);
$act_owner = $rows->current()->toArray();

$organization = new Organization();
$ret = $organization->find($act_owner['organization_id']);
$organization = $ret->current()->toArray();

$columns = $sys->getEnumColumns('availability');
$columnsCols = array_reverse($columns);
$i = 0;
foreach ($columnsCols as $col) {
    foreach ($columns as $row) {
        $cellidx_lookup[$col][$row] = $i++;
    }
}

$threat_likelihood = $sys->calcThreat($this->poam['threat_level'], $this->poam['cmeasure_effectiveness']);

$threat_index = $cellidx_lookup[$p['threat_level']][$p['cmeasure_effectiveness']];
$risk_index = $cellidx_lookup[$threat_likelihood][$this->securityCategorization];

// This is the "letter" page size
$pdf = new Cezpdf('letter');
$pdf->selectFont(FONTS . "/Helvetica.afm");

$pdf->ezText('Risk Analysis Form (RAF)', TITLE_TEXT_SIZE, array('justification'=>'center'));
$pdf->ezText('', BODY_TEXT_SIZE, array('justification'=>'center')); //vertical blank

$data = array(array('<b>Finding Information</b>'));
$pdf->ezTable($data, null, null, $headerOptions);
$pdf->ezText('', BODY_TEXT_SIZE, array('justification'=>'center'));

$data = array(array("<b>Finding Number:</b>", $p['id'],
                    "<b>Finding Source:</b>", strip_tags($p['source_name'])),
              array("<b>Date Opened:</b>", $p['create_ts'],
                    "<b>Date Discovered:</b>", $p['discover_ts']),
              array("<b>Organization:</b>", $organization['name'],
                    "<b>Infomation System:</b>", $this->system_list[$p['system_id']]),
              array("<b>Asset(s) Affected:</b>", $p['asset_name'],"",""));
$pdf->ezTable($data, null, null, $labelOptions);

$data = array(array("<b>Finding Description:</b>", html_entity_decode(strip_tags($p['finding_data'])),"",""),
              array("<b>Recommendation:</b>",  html_entity_decode(strip_tags($p['action_suggested'])),"",""));
$pdf->ezTable($data, null, null, $labelOptions);

$pdf->ezText('', BODY_TEXT_SIZE, array('justification'=>'center'));
$data = array(array('<b>Mitigation Strategy</b>'));
$pdf->ezTable($data, null, null, $headerOptions);
$pdf->ezText('', BODY_TEXT_SIZE, array('justification'=>'center'));
$data = array(array("<b>Type:</b>", strip_tags($p['type']), "", ""),
              array("<b>Description:</b>", html_entity_decode(strip_tags($p['action_planned'])), "", ""),
              array("<b>Estimated Completion Date:</b>", $p['action_current_date'], "", "")); 
$pdf->ezTable($data, null, null, $labelOptions);

$pdf->ezText('', BODY_TEXT_SIZE, array('justification'=>'center'));
$data = array(array('<b>Risk Analysis</b>'));
$pdf->ezTable($data, null, null, $headerOptions);
$pdf->ezText('', BODY_TEXT_SIZE, array('justification'=>'center'));
if ($this->securityCategorization == $columns['2']) {
    $effect = 'severe or catastrophic';
} elseif ($this->securityCategorization == $columns['1']) {
    $effect = 'serious';
} elseif ($this->securityCategorization == $columns['0']) {
    $effect = 'limited';
} else {
    $effect = '';
}
$pdf->ezText('<b><i>FIPS 199 System Security Categorization</i></b>', BODY_TEXT_SIZE, array('justification'=>'center'));
$data = array(array('<b>Confidentiality:</b>', $act_owner['confidentiality']),
              array('<b>Integrity:</b>', $act_owner['integrity']),
              array('<b>Availability:</b>', $act_owner['availability']),
              array('<b>Security Categorization:</b>', $this->securityCategorization),
              array('<b>Security Categorization Description:</b>',
                    !empty($effect)
                    ? "The loss of confidentiality, integrity, or availability could be expected to have a $effect"
                    . ' adverse effect on organizational operations, organizational assets, or individuals. This is the'
                    . ' maximum level of risk exposure based on the Information System Security Categorization data.'
                    : 'This system\'s Confidentiality, Integrity, and Availability are not defined; therefore, the'
                    . ' system security categorization is also undefined.'));

$pdf->ezTable($data, null, null, $labelOptions);
$pdf->ezText('', BODY_TEXT_SIZE, array('justification'=>'center')); //vertical blank

$pdf->ezText('<b><i>Threat Likelihood</i></b>', BODY_TEXT_SIZE, array('justification'=>'center'));
$pdf->ezText('The threat likelihood defines the likelihood or frequency of a harmful event occurring. The likelihood'
           . ' determination evaluates the threat level along with the existence and effectiveness of current'
           . ' controls.', BODY_TEXT_SIZE, $bodyTextOptions);

$data = array(array("<b>Threat Description:</b>", html_entity_decode(strip_tags($p['threat_source'])), "", ""),
              array("<b>Threat Level:</b>", $p['threat_level'], "", ""),
              array("<b>Description of Countermeasures:</b>", html_entity_decode(strip_tags($p['cmeasure'])), "", ""),
              array("<b>Countermeasures Effectiveness:</b>", strip_tags($p['cmeasure_effectiveness']), "", ""));
$pdf->ezTable($data, null, null, $labelOptions);

$data = array(array("<b>                                                              Countermeasure Effectiveness</b>"));
$pdf->ezTable($data, null, null, $tableOptions);

$data = array();
$i = 0;
$data[0][0] = "<b>Threat Level</b>";
foreach ($columns as $countermeasures) {
    $i++;
    $data[0][$i] = "<b>$countermeasures</b>";
}
$j = 0;
$k = 0;
$i = 0;
foreach (array_reverse($columns) as $threat) {
    $i++;
    $data[$i][] = "<b>$threat</b>";
    foreach ($columns as $countermeasures) {
        $value = $sys->calcThreat($threat, $countermeasures);
        $data[$i][] = $threat_index == $k++?'<b><i>'.$value.'</i></b>':$value;
    }
}

$pdf->ezTable($data, null, null, $tableOptions);
$overall_threat = $sys->calcThreat($p['threat_level'], $p['cmeasure_effectiveness']);
$data = array(array("Based on the threat level and countermeasures currently in place, the finding presents a <b>".$overall_threat."</b> level of risk to the information system. "));
$pdf->ezTable($data, null, null, $labelOptions);
$pdf->ezText('', BODY_TEXT_SIZE, array('justification'=>'center'));

// Start a new page
$pdf->ezNewPage();
$pdf->ezText('<b><i>Organizational Risk Level</i></b>', BODY_TEXT_SIZE, array('justification'=>'center'));

$data = array(array("<b>                                                   Security Categorization of Information System</b>"));
$pdf->ezTable($data, null, null, $tableOptions);
$overall_risk = $sys->calcMin($threat_likelihood, $this->securityCategorization);

$data = array();
$i = 0;
$data[0][0] = "<b>Threat Likelihood</b>";
foreach ($columns as $security_categorization) {
    $i++;
    $data[0][$i] = "<b>$security_categorization</b>";
}
$j = 0;
$k = 0;
$i = 0;
foreach (array_reverse($columns) as $threat_likelihood) {
    $i++;
    $data[$i][] = "<b>$threat_likelihood</b>";
    foreach ($columns as $security_categorization) {
        $value = $sys->calcMin($threat_likelihood, $security_categorization);
        $data[$i][] = $risk_index == $k++?'<b><i>'.$value.'</i></b>':$value;
    }
}
 
$pdf->ezTable($data, null, null, $tableOptions);
$data = array(array("Based on the threat likelihood and security categorization of the information system, the finding presents a <b>".$overall_risk."</b> level of risk to the organization. "));
$pdf->ezTable($data, null, null, $labelOptions);
$pdf->ezText('', BODY_TEXT_SIZE, array('justification'=>'center'));

$data = array(array("Agency Recommendations based on Risk Levels:"));
$pdf->ezTable($data, null, null, $labelOptions);
$data = array(array('<b>Risk Level</b>', '<b>Risk Description and Necessary Actions</b>'),
              array('<b>'.$columns[2].'</b>', 'If an observation or finding is evaluated as a high risk, there is a strong need for corrective measures. An existing system may continue to operate, but a corrective action plan must be put in place as soon as possible.'),
              array('<b>'.$columns[1].'</b>', 'If an observation is rated as medium risk, corrective actions are needed and a plan must be developed to incorporate these actions within a reasonable period of time.'),
              array('<b>'.$columns[0].'</b>', 'If an observation is described as low risk, the system\'s AO must determine whether corrective actions are still required or decide to accept the risk.'));

$pdf->ezTable($data, null, null, $tableOptions);
$pdf->ezText('', BODY_TEXT_SIZE, array('justification'=>'center'));

// Endorsement of Risk Level Analysis section
$data = array(array('<b>Endorsement of Risk Level Analysis</b>'));
$pdf->ezTable($data, null, null, $headerOptions);
$pdf->ezText('', BODY_TEXT_SIZE, array('justification'=>'center'));

// Business Owner Signature
$data = array(
  array('Concur __ ', 'Non-Concur __ ','_____________________________________________','___/___/______'),
  array('',           '',              'Information System Owner (ISO)',               'Date')
);

$pdf->ezTable($data,
              null,
              null,
              $labelOptions
             );

// Authorizing Official Signature
$pdf->ezText('', FOOTER_TEXT_SIZE, array('justification'=>'center'));

$data = array(
  array('Concur __ ', 'Non-Concur __ ','_____________________________________________','___/___/______'),
  array('',           '',              'Authorizing Official (AO)',                    'Date')
);

$pdf->ezTable($data,
              null,
              null,
              $labelOptions
             );

// Mark the document with sensitivity and clearance information.
$pdf->ezText('', FOOTER_TEXT_SIZE, array('justification'=>'center'));
$footer = 'WARNING: This report is for internal, official use only.  This report contains sensitive computer security related information. Public disclosure of this information would risk circumvention of the law. Recipients of this report must not, under any circumstances, show or release its contents for purposes other than official action. This report must be safeguarded to prevent improper disclosure. Staff reviewing this document must hold a minimum of Public Trust Level 5C clearance.';
$pdf->ezText($footer, FOOTER_TEXT_SIZE, $bodyTextOptions);

// IE has a bug where it can't display certain mimetypes if a no-cache header is sent,
// so we need to switch the header right before we stream the PDF.
header('Pragma: private');
header('Cache-Control: private');
echo $pdf->ezOutput();
