<?php
// @codingStandardsIgnoreFile - not checking XLS template files
require_once ('Spreadsheet/Excel/Writer.php');

/**
 * @todo Ideally the formatting and other generic presentation aspects for the spreadsheet would be encapsulated into
 * a separate class so that all Excel exports in OpenFISMA would have the same style without duplicating code all over
 * the project.
 */

// Create a workbook with 1 worksheet
$workbook  = new Spreadsheet_Excel_Writer();
$workbook->setVersion(8); // fixes 255 char truncation issue
$worksheet =& $workbook->addWorksheet();

// Create formats for the column headers and for the data cells
$headerFormat =& $workbook->addFormat(array('Size' => 10,
                                            'Align' => 'center',
                                            'Color' => 'white',
                                            'FgColor' => 'black',
                                            'Bold' => true));

$dataFormat =& $workbook->addFormat(array('Size' => 10,
                                          'Align' => 'left',
                                          'Color' => 'black',
                                          'BorderColor '=> 'black',
                                          'Bottom' => 1,
                                          'Top' => 1,
                                          'Left' => 1,
                                          'Right' => 1));
$dataFormat->setVAlign('top');
$dataFormat->setTextWrap();

// Create the static elements of the report
$columnCount = 1 + count($this->months);
$reportRunTime = "Report run time: " . date("Y-m-d H:i:s");
$worksheet->setColumn(0, 0, 15);
$worksheet->setColumn(1, $columnCount - 1, 5);
$worksheet->write(0, 0, ("Report run time: " . date("Y-m-d H:i:s")), $dataFormat);
$worksheet->mergeCells(0, 0, 0, $columnCount - 1);

// Create the header row
$headers = array('Incidents') + $this->months;
$worksheet->writeRow(1, 0, $headers, $headerFormat);

$i = 2;
foreach($this->history as $action => $history) {
    $worksheet->writeRow($i, 0, array($action), $dataFormat); 
    $worksheet->writeRow($i, 1, $history, $dataFormat);
    $i++;
}

$workbook->send($this->title . '.xls');
$workbook->close();
