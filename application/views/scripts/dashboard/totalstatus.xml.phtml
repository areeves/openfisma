<chart>
    <license>FTA9HNF7P2O.H4X5CWK-2XOI1X0-7L</license>
    <link_data url="javascript:barChartClick(_series_)" target="javascript" />
    <chart_data>
		<row>
			<null/>
			<string></string>
		</row>	
		<?php foreach ($this->summary AS $status=>$statusCount) { ?>
		<row>
			<string><?php echo $status; ?></string>
			<number tooltip='<?php echo $statusCount; ?> <?php echo $status; ?>'><?php echo $statusCount; ?></number>
		</row>
		<?php } ?>
	</chart_data>

	<chart_type>3d column</chart_type>

    <chart_grid_h thickness='0' />

	<axis_value alpha='0' />

	<chart_label font='arial'
                 bold='true'
                 size='12'
                 position='over' />

	<chart_pref rotation_x='30'
                rotation_y='40'
                min_x='20'
                max_x='70'
                min_y='30'
                max_y='80' />

	<chart_rect x='0' y='0' width='480' height='240' positive_alpha='0' negative_alpha='25' />

	<filter>
		<shadow id='low' distance='2' angle='45' alpha='50' blurX='2' blurY='2' />
	</filter>

    <legend layout='vertical'
            bullet='square'
            font='arial'
            bold='true'
            size='10'
            x='0'
            y='50'
            width='100'
            height='150' />

	<series_color>
<?php
    // Figure out which colors are MSA colors and which are EA colors
    unset($this->summary['NEW']);
    unset($this->summary['DRAFT']);
    $msaColors = array();
    foreach ($this->summary as $status => $filler) {
        if ($status == 'EN') {
            break;
        }
        $msaColors[] = $status;
        unset($this->summary[$status]);
    }
    unset($this->summary['EN']);
    $epColors = array();
    foreach ($this->summary as $status => $filler) {
        $epColors[] = $status;
    }
    
    // Colors for NEW & DRAFT
    print '<color>cccccc</color>';
    print '<color>66ff66</color>';
    
    // Colors for MSA
    define('START_COLOR', 200); // These constants are used for creating a gradient
    define('STOP_COLOR', 25); // The range of these constants sets the high and low gradient value
    if (count($msaColors) > 1) {
        $colorStep = (STOP_COLOR - START_COLOR) / (count($msaColors) - 1);
    } else {
        $colorStep = (STOP_COLOR - START_COLOR) / 2;
    }
	for ($i = 0; $i < count($msaColors); $i++) {
        $hex = dechex(START_COLOR + ($colorStep * $i));
        print "<color>ff{$hex}{$hex}</color>";
	}
	
	// Color for EN
	print '<color>ff9933</color>';
	
	// Colors for EA
    if (count($epColors) > 1) {
        $colorStep = (STOP_COLOR - START_COLOR) / (count($epColors) - 1);
    } else {
        $colorStep = (STOP_COLOR - START_COLOR) / 2;
    }
	for ($i = 0; $i < count($epColors); $i++) {
        $hex = dechex(START_COLOR + ($colorStep * $i));
        print "<color>{$hex}{$hex}ff</color>";
	}
?>
	</series_color>
</chart>
