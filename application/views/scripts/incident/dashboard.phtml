<div id="foo" style="width: 48%; float: left;">
<?php Fisma_Format_Section::startSection("New Incidents: <span id='newSearchResultsTotalFound'></span>"); ?>

<div id="newList"></div>
<script type="text/javascript">
// Column definitions
var myColumnDefs = [
    {key:"id", label:"Incident ID", hidden: false}
    ,{key:"additionalInfo", label:"Additional Info", hidden: false}
    ,{key:"status", label:"status", hidden: false}
    ,{key:"reportTs", label:"Reported", hidden: false}
];

    // A function which builds the query string
    var myRequestBuilder = function(oState, oSelf) {
        // Get states or use defaults
        oState = oState || {pagination:null, sortedBy:null};
        var sort = (oState.sortedBy) ? oState.sortedBy.key : "id";
        var dir = (oState.sortedBy && oState.sortedBy.dir == 'yui-dt-asc') ? "asc" : "desc";
        var startIndex = oState.pagination.recordOffset;
        var count = oState.pagination.rowsPerPage;
    
        // Build custom request
        var request = "<?php echo $this->link; ?>" + 
                      "/sortby/" + status +
                      "/order/" + dir +
                      "/startIndex/" + startIndex +
                      "/count/" + count;
        return request;
    };

    // DataSource instance
    var myDataSource = new YAHOO.util.DataSource("/panel/incident/sub/search");
    myDataSource.responseType = YAHOO.util.DataSource.TYPE_JSON;
    myDataSource.responseSchema = {
        resultsList: "table.records",
        metaFields: {
            totalRecords: "table.totalRecords"
        }
    };
    // DataTable configuration
    var myConfigs = {
        //dynamicData: false
        initialRequest: "<?php echo $this->link; ?>/status/new/sortby/reportTs/order/asc/startIndex/0/count/<?php echo $this->pageInfo['count']?>",
        dynamicData: true, 
        sortedBy : {key:"reportTs", dir:YAHOO.widget.DataTable.CLASS_ASC},
        paginator: new YAHOO.widget.Paginator(
            {
                rowsPerPage:<?php echo $this->pageInfo['count']?>,
                template:"{FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink}"
            }
        ), 
        generateRequest : myRequestBuilder
    };
    var myDataTable = new YAHOO.widget.DataTable("newList", myColumnDefs, myDataSource, myConfigs);
    // Update totalRecords on the fly with value from server
    myDataTable.handleDataReturnPayload = function(oRequest, oResponse, oPayload) {
        oPayload.totalRecords = oResponse.meta.totalRecords;
        // display total records in the search results header, if not already present
        var newSearchResultsHeader = document.getElementById('newSearchResultsTotalFound');
        if (!newSearchResultsHeader.firstChild) {
            var totalRecords = oResponse.meta.totalRecords ? oResponse.meta.totalRecords : 0;
            var searchTotalFound = document.createTextNode('(' + totalRecords + ' records found)');
            newSearchResultsHeader.appendChild(searchTotalFound);
        }
        return oPayload;
    }
    
    myDataTable.subscribe("rowMouseoverEvent", myDataTable.onEventHighlightRow); 
    myDataTable.subscribe("rowMouseoutEvent", myDataTable.onEventUnhighlightRow);
    <?php if (Fisma_Acl::hasPrivilege('organization','read')) { ?>
            myDataTable.subscribe("rowClickEvent", 
                function (oArgs) {
                    var elTarget = oArgs.target;
                    var oRecord = this.getRecord(elTarget);
                    document.location = "/panel/incident/sub/view/id/" + oRecord.getData("id");
                }
            );
    <?php } ?>
</script>

<?php Fisma_Format_Section::stopSection(); ?>
</div>

<div id="foo" style="width: 48%; float: right;">

<?php Fisma_Format_Section::startSection("Open Incidents: <span id='openSearchResultsTotalFound'></span>"); ?>
<div id="openList"></div>
<script type="text/javascript">
// Column definitions
var myColumnDefs = [
    {key:"id", label:"Incident ID", hidden: false}
    ,{key:"additionalInfo", label:"Additional Info", hidden: false}
    ,{key:"status", label:"status", hidden: false}
    ,{key:"reportTs", label:"Reported", hidden: false}
];

    // A function which builds the query string
    var myRequestBuilder = function(oState, oSelf) {
        // Get states or use defaults
        oState = oState || {pagination:null, sortedBy:null};
        var sort = (oState.sortedBy) ? oState.sortedBy.key : "id";
        var dir = (oState.sortedBy && oState.sortedBy.dir == 'yui-dt-asc') ? "asc" : "desc";
        var startIndex = oState.pagination.recordOffset;
        var count = oState.pagination.rowsPerPage;
    
        // Build custom request
        var request = "<?php echo $this->link; ?>" + 
                      "/sortby/" + status +
                      "/order/" + dir +
                      "/startIndex/" + startIndex +
                      "/count/" + count;
        return request;
    };

    // DataSource instance
    var myDataSource = new YAHOO.util.DataSource("/panel/incident/sub/search");
    myDataSource.responseType = YAHOO.util.DataSource.TYPE_JSON;
    myDataSource.responseSchema = {
        resultsList: "table.records",
        metaFields: {
            totalRecords: "table.totalRecords"
        }
    };
    // DataTable configuration
    var myConfigs = {
        //dynamicData: false
        initialRequest: "<?php echo $this->link; ?>/status/open/sortby/reportTs/order/asc/startIndex/0/count/<?php echo $this->pageInfo['count']?>",
        dynamicData: true, 
        sortedBy : {key:"reportTs", dir:YAHOO.widget.DataTable.CLASS_ASC},
        paginator: new YAHOO.widget.Paginator(
            {
                rowsPerPage:<?php echo $this->pageInfo['count']?>,
                template:"{FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink}"
            }
        ), 
        generateRequest : myRequestBuilder
    };
    var myDataTable = new YAHOO.widget.DataTable("openList", myColumnDefs, myDataSource, myConfigs);
    // Update totalRecords on the fly with value from server
    myDataTable.handleDataReturnPayload = function(oRequest, oResponse, oPayload) {
        oPayload.totalRecords = oResponse.meta.totalRecords;
        // display total records in the search results header, if not already present
        var openSearchResultsHeader = document.getElementById('openSearchResultsTotalFound');
        if (!openSearchResultsHeader.firstChild) {
            var totalRecords = oResponse.meta.totalRecords ? oResponse.meta.totalRecords : 0;
            var searchTotalFound = document.createTextNode('(' + totalRecords + ' records found)');
            openSearchResultsHeader.appendChild(searchTotalFound);
        }
        return oPayload;
    }
    
    myDataTable.subscribe("rowMouseoverEvent", myDataTable.onEventHighlightRow); 
    myDataTable.subscribe("rowMouseoutEvent", myDataTable.onEventUnhighlightRow);
    <?php if (Fisma_Acl::hasPrivilege('organization','read')) { ?>
            myDataTable.subscribe("rowClickEvent", 
                function (oArgs) {
                    var elTarget = oArgs.target;
                    var oRecord = this.getRecord(elTarget);
                    document.location = "/panel/incident/sub/view/id/" + oRecord.getData("id");
                }
            );
    <?php } ?>
</script>
<?php Fisma_Format_Section::stopSection(); ?>
</div>

<div class="clear"></div>

<div id="foo" style="width: 48%; float: left;">
<?php Fisma_Format_Section::startSection("Resolved / Rejected Incidents: <span id='resolvedSearchResultsTotalFound'></span>"); ?>
<div id="resolvedList"></div>
<script type="text/javascript">
// Column definitions
var myColumnDefs = [
    {key:"id", label:"Incident ID", hidden: false}
    ,{key:"additionalInfo", label:"Additional Info", hidden: false}
    ,{key:"status", label:"status", hidden: false}
    ,{key:"reportTs", label:"Reported", hidden: false}
];

    // A function which builds the query string
    var myRequestBuilder = function(oState, oSelf) {
        // Get states or use defaults
        oState = oState || {pagination:null, sortedBy:null};
        var sort = (oState.sortedBy) ? oState.sortedBy.key : "id";
        var dir = (oState.sortedBy && oState.sortedBy.dir == 'yui-dt-asc') ? "asc" : "desc";
        var startIndex = oState.pagination.recordOffset;
        var count = oState.pagination.rowsPerPage;
    
        // Build custom request
        var request = "<?php echo $this->link; ?>" + 
                      "/sortby/" + status +
                      "/order/" + dir +
                      "/startIndex/" + startIndex +
                      "/count/" + count;
        return request;
    };

    // DataSource instance
    var myDataSource = new YAHOO.util.DataSource("/panel/incident/sub/search");
    myDataSource.responseType = YAHOO.util.DataSource.TYPE_JSON;
    myDataSource.responseSchema = {
        resultsList: "table.records",
        metaFields: {
            totalRecords: "table.totalRecords"
        }
    };
    // DataTable configuration
    var myConfigs = {
        //dynamicData: false
        initialRequest: "<?php echo $this->link; ?>/status/resolved/sortby/reportTs/order/asc/startIndex/0/count/<?php echo $this->pageInfo['count']?>",
        dynamicData: true, 
        sortedBy : {key:"reportTs", dir:YAHOO.widget.DataTable.CLASS_ASC},
        paginator: new YAHOO.widget.Paginator(
            {
                rowsPerPage:<?php echo $this->pageInfo['count']?>,
                template:"{FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink}"
            }
        ), 
        generateRequest : myRequestBuilder
    };
    var myDataTable = new YAHOO.widget.DataTable("resolvedList", myColumnDefs, myDataSource, myConfigs);
    // Update totalRecords on the fly with value from server
    myDataTable.handleDataReturnPayload = function(oRequest, oResponse, oPayload) {
        oPayload.totalRecords = oResponse.meta.totalRecords;
        // display total records in the search results header, if not already present
        var resolvedSearchResultsHeader = document.getElementById('resolvedSearchResultsTotalFound');
        if (!resolvedSearchResultsHeader.firstChild) {
            var totalRecords = oResponse.meta.totalRecords ? oResponse.meta.totalRecords : 0;
            var searchTotalFound = document.createTextNode('(' + totalRecords + ' records found)');
            resolvedSearchResultsHeader.appendChild(searchTotalFound);
        }
        return oPayload;
    }
    
    myDataTable.subscribe("rowMouseoverEvent", myDataTable.onEventHighlightRow); 
    myDataTable.subscribe("rowMouseoutEvent", myDataTable.onEventUnhighlightRow);
    <?php if (Fisma_Acl::hasPrivilege('organization','read')) { ?>
            myDataTable.subscribe("rowClickEvent", 
                function (oArgs) {
                    var elTarget = oArgs.target;
                    var oRecord = this.getRecord(elTarget);
                    document.location = "/panel/incident/sub/view/id/" + oRecord.getData("id");
                }
            );
    <?php } ?>
</script>
<?php Fisma_Format_Section::stopSection(); ?>
</div>


<div id="foo" style="width: 48%; float: right;">
<?php Fisma_Format_Section::startSection("Recently Closed Incidents: <span id='closedSearchResultsTotalFound'></span>"); ?>
<div id="closedList"></div>
<script type="text/javascript">
// Column definitions
var myColumnDefs = [
    {key:"id", label:"Incident ID", hidden: false}
    ,{key:"additionalInfo", label:"Additional Info", hidden: false}
    ,{key:"status", label:"status", hidden: false}
    ,{key:"reportTs", label:"Reported", hidden: false}
];

    // A function which builds the query string
    var myRequestBuilder = function(oState, oSelf) {
        // Get states or use defaults
        oState = oState || {pagination:null, sortedBy:null};
        var sort = (oState.sortedBy) ? oState.sortedBy.key : "id";
        var dir = (oState.sortedBy && oState.sortedBy.dir == 'yui-dt-asc') ? "asc" : "desc";
        var startIndex = oState.pagination.recordOffset;
        var count = oState.pagination.rowsPerPage;
    
        // Build custom request
        var request = "<?php echo $this->link; ?>" + 
                      "/sortby/" + status +
                      "/order/" + dir +
                      "/startIndex/" + startIndex +
                      "/count/" + count;
        return request;
    };

    // DataSource instance
    var myDataSource = new YAHOO.util.DataSource("/panel/incident/sub/search");
    myDataSource.responseType = YAHOO.util.DataSource.TYPE_JSON;
    myDataSource.responseSchema = {
        resultsList: "table.records",
        metaFields: {
            totalRecords: "table.totalRecords"
        }
    };
    // DataTable configuration
    var myConfigs = {
        //dynamicData: false
        initialRequest: "<?php echo $this->link; ?>/status/closed/sortby/reportTs/order/asc/startIndex/0/count/<?php echo $this->pageInfo['count']?>",
        dynamicData: true, 
        sortedBy : {key:"reportTs", dir:YAHOO.widget.DataTable.CLASS_ASC},
        paginator: new YAHOO.widget.Paginator(
            {
                rowsPerPage:<?php echo $this->pageInfo['count']?>,
                template:"{FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink}"
            }
        ), 
        generateRequest : myRequestBuilder
    };
    var myDataTable = new YAHOO.widget.DataTable("closedList", myColumnDefs, myDataSource, myConfigs);
    // Update totalRecords on the fly with value from server
    myDataTable.handleDataReturnPayload = function(oRequest, oResponse, oPayload) {
        oPayload.totalRecords = oResponse.meta.totalRecords;
        // display total records in the search results header, if not already present
        var closedSearchResultsHeader = document.getElementById('closedSearchResultsTotalFound');
        if (!closedSearchResultsHeader.firstChild) {
            var totalRecords = oResponse.meta.totalRecords ? oResponse.meta.totalRecords : 0;
            var searchTotalFound = document.createTextNode('(' + totalRecords + ' records found)');
            closedSearchResultsHeader.appendChild(searchTotalFound);
        }
        return oPayload;
    }
    
    myDataTable.subscribe("rowMouseoverEvent", myDataTable.onEventHighlightRow); 
    myDataTable.subscribe("rowMouseoutEvent", myDataTable.onEventUnhighlightRow);
    <?php if (Fisma_Acl::hasPrivilege('organization','read')) { ?>
            myDataTable.subscribe("rowClickEvent", 
                function (oArgs) {
                    var elTarget = oArgs.target;
                    var oRecord = this.getRecord(elTarget);
                    document.location = "/panel/incident/sub/view/id/" + oRecord.getData("id");
                }
            );
    <?php } ?>
</script>
<?php Fisma_Format_Section::stopSection(); ?>
</div>

<div class="clear"></div>

<div id="foo" style="width: 48%; float: left;">
<?php Fisma_Format_Section::startSection("Comments"); ?>
<?php Fisma_Format_Section::stopSection(); ?>
</div>

<div id="foo" style="width: 48%; float: right;">
<?php Fisma_Format_Section::startSection("Stats"); ?>
<?php Fisma_Format_Section::stopSection(); ?>
</div>
