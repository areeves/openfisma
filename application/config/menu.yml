########################################################################################################################
#
# Copyright (c) 2012 Endeavor Systems, Inc.
#
# This file is part of OpenFISMA.
#
# OpenFISMA is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# OpenFISMA is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY# without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with OpenFISMA.  If not, see {@link http://www.gnu.org/licenses/}.
#
########################################################################################################################
#
# Configure file for building menu.
#
# Author:    Mark Ma<mark.ma@reyosoft.com>
# Copyright: (c) Endeavor Systems, Inc. 2012 {@link http://www.endeavorsystems.com}
# License:   http://www.openfisma.org/content/license
#
########################################################################################################################

Home:
    label: <span class=home>&nbsp;</span>
    link: /index/home
Finding:
    label: Findings
    privilege:
        func: hasArea
        param: finding
    submenu:
        Search:
            label: Search
            link: /finding/remediation/list
            privilege:
                func: hasPrivilegeForClass
                param1: read
                param2: Finding
        Goto:
            label: Go To...
            onclick:
                fn: Fisma.Menu.goTo
                obj:
                    model: Finding
                    controller: /finding/remediation
            privilege:
                func: hasPrivilegeForClass
                param1: read
                param2: Finding
        Separator1:
            label: Separator
            condition: >
                return ($acl->hasPrivilegeForClass('read', 'Finding') and ($acl->hasPrivilegeForClass('create', 'Finding') || $acl->hasPrivilegeForClass('inject', 'Finding')));
        Create:
            label: Create New Finding
            link: /finding/remediation/create
            privilege:
                func: hasPrivilegeForClass
                param1: create
                param2: Finding
        Inject:
            label: Upload Spreadsheet
            link: /finding/index/injection
            privilege:
                func: hasPrivilegeForClass
                param1: inject
                param2: Finding
        Separator2:
            label: Separator
        Dashboard:
            label: Dashboard
            link: /finding/dashboard
        Administration:
            label: Administration
            privilege:
                func: hasArea
                param: finding_admin
            submenu:
                Finding_Workflow:
                    label: Workflow
                    link: /finding/workflow/view
                Finding_General:
                    label: General
                    link: /finding/config/general
                Finding_Source:
                    label: Sources
                    link: /finding/source/list
                    privilege:
                        func: hasPrivilegeForClass
                        param1: read
                        param2: Source
        Reports:
            label: Reports
            privilege:
                func: hasArea
                param: finding_report
            submenu:
                OMB_FISMA:
                    label: OMB FISMA
                    link: /finding/report/fisma
                Overdue:
                    label: Overdue Findings
                    link: /finding/report/overdue/format/html
                Plugin:
                    label: Plugin Reports
                    link: /finding/report/plugin

Vulnerability:
    label: Vulnerabilities
    module: Vulnerability Management
    privilege:
        func: hasArea
        param: vulnerability
    submenu:
        Search:
            label: Search
            link: /vm/vulnerability/list
        Goto:
            label: Go To...
            onclick:
                fn: Fisma.Menu.goTo
                obj:
                    model: Vulnerability
                    controller: /vm/vulnerability
        Separator1:
            label: Separator
        Upload:
            label: Upload Scan Results
            link: /vm/vulnerability/plugin
            privilege:
                func: hasPrivilegeForClass
                param1: create
                param2: Vulnerability
        Separator2:
            label: Separator
        Administration:
            label: Administration
            privilege:
                func: hasArea
                param: vulnerability_admin
            submenu:
                Products:
                    label: Products
                    link: /vm/product/list
                    privilege:
                        func: hasPrivilegeForClass
                        param1: read
                        param2: Product
                Resolutions:
                    label: Resolutions
                    link: /vm/vulnerability-resolution/list
                    privilege:
                        func: hasPrivilegeForClass
                        param1: read
                        param2: VulnerabilityResolution
        Reports:
            label: Reports
            privilege:
                func: hasArea
                param: vulnerability_report
            submenu:
                Aggregated:
                    label: Aggregated Risk
                    link: /vm/vulnerability-report/risk/format/html
                Reopened:
                    label: Reopened Vulnerabilities
                    link: /vm/vulnerability-report/reopened/format/html
                Services:
                    label: Vulnerable Services
                    link: /vm/vulnerability-report/vulnerable-service/format/html

Incident:
    label: Incidents
    module: Incident Reporting
    privilege:
        func: hasArea
        param: incident
    submenu:
        Search:
            label: Search
            link: /incident/list
        Goto:
            label: Go To...
            onclick:
                fn: Fisma.Menu.goTo
                obj:
                    model: Incident
                    controller: /incident
        Separator1:
            label: Separator
        ReportIncident:
            label: Report An Incident
            link: /incident/report
        Separator2:
            label: Separator
        Dashboard:
            label: Dashboard
            link: /incident-dashboard
        Administration:
            label: Administration
            privilege:
                func: hasArea
                param: incident_admin
            submenu:
                IrSubCategory:
                    label: Categories
                    link: /ir-category/list
                    privilege:
                        func: hasPrivilegeForClass
                        param1: read
                        param2: IrSubCategory
                IrWorkflowDef:
                    label: Workflows
                    link: /ir-workflow/list
                    privilege:
                        func: hasPrivilegeForClass
                        param1: read
                        param2: IrWorkflowDef
        Reports:
            label: Reports
            privilege:
                func: hasArea
                param: incident_report
            submenu:
                IncidentOrganizations:
                    label: Incident Organizations
                    link: /incident-report/organization/format/html
                IncidentCategories:
                    label: Incident Categories
                    link: /incident-report/category/format/html
                History:
                    label: Incident History
                    link: /incident-report/history/format/html

System:
    label: System Inventory
    privilege:
        func: hasArea
        param: system_inventory
    submenu:
        Asset:
            label: Assets
            link: /asset/list
            privilege:
                func: hasPrivilegeForClass
                param1: read
                param2: Asset
        Controls:
            label: Controls
            link: /security-control/list?f=filter_published_booleanYes
        Documentation:
            label: Documentation
            link: /system-document/list
        Organizations:
            label: Organizations
            link: /organization/list
        Systems:
            label: Systems
            link: /system/list
        Separator1:
            label: Separator
        Dashboard:
            label: Dashboard
            link: /organization-dashboard
        Administration:
            label: Administration
            privilege:
                func: hasArea
                param: system_inventory_admin
            submenu:
                ControlCatalogs:
                    label: Control Catalogs
                    link: /security-control-catalog/list
                DocumentType:
                    label: Document Types
                    link: /document-type/list
                    privilege:
                        func: hasPrivilegeForClass
                        param1: read
                        param2: DocumentType
                IconManagement:
                    label: Icon Management
                    link: /icon/manage
                    privilege:
                        func: hasPrivilegeForClass
                        param1: manage
                        param2: Icon
                Network:
                    label: Networks
                    link: /network/list
                    privilege:
                        func: hasPrivilegeForClass
                        param1: read
                        param2: Network
                OrganizationType:
                    label: Organization Types
                    link: /organization-type/list
                    privilege:
                        func: hasPrivilegeForClass
                        param1: read
                        param2: OrganizationType
                SystemType:
                    label: System Types
                    link: /system-type/list
                    privilege:
                        func: hasPrivilegeForClass
                        param1: read
                        param2: SystemType
        Reports:
            label: Reports
            privilege:
                func: hasArea
                param: system_inventory_report
            submenu:
                Compliance:
                    label: Documentation Compliance
                    link: /organization-report/documentation-compliance/format/html
                Personnel:
                    label: Personnel
                    link: /organization-report/personnel/format/html
                Privacy:
                    label: Privacy
                    link: /organization-report/privacy/format/html
                SecurityAuthorizations:
                    label: Security Authorizations
                    link: /organization-report/security-authorization/format/html

Administration:
    label: Administration
    privilege:
        func: hasArea
        param: admin
    submenu:
        SysConfig:
            label: System Configuration
            submenu:
                Email:
                    label: E-mail
                    link: /config/email
                Policies:
                    label: General Policies
                    link: /config/general
                LDAP:
                    label: LDAP
                    link: /config/list-ldap
                    condition: return (true || 'ldap' == Fisma::configuration()->getConfig('auth_type'));
                PasswordPolicy:
                    label: Password Policy
                    link: /config/password
                Privacy:
                    label: Privacy Policy
                    link: /config/privacy
                Contact:
                    label: Technical Contact
                    link: /config/contact
        UserManagement:
            label: User Management
            submenu:
                Roles:
                    label: Roles
                    link: /role/list
                    privilege:
                        func: hasPrivilegeForClass
                        param1: read
                        param2: Role
                Users:
                    label: Users
                    link: /user/list
                    privilege:
                        func: hasPrivilegeForClass
                        param1: read
                        param2: User
                ViewAs:
                    label: View As...
                    onclick:
                        fn: Fisma.ViewAs.selectUserForm
        Debug:
            label: Diagnostics
            submenu:
                SystemCache:
                    label: APC System Cache
                    link: /debug/apc-cache/type/system
                    condition: return Fisma_Menu::isApc();
                UserCache:
                    label: APC User Cache
                    link: /debug/apc-cache/type/user
                    condition: return Fisma_Menu::isApc();
                BackgroundTasks:
                    label: Background Tasks
                    link: /config/background-tasks
                ErrorLog:
                    label: Error log
                    link: /debug/errorlog
                PHPInfo:
                    label: PHP Info
                    link: /debug/phpinfo
                PHPlog:
                    label: PHP Log
                    link: /debug/phplog
                Search:
                    label: Search
                    link: /config/search
        Separator1:
            label: Separator
        AdminManual:
            label: Administrator Manual
            link: http://manual.openfisma.org/display/ADMIN/Administrator+Manual
            target: _blank
UserPreferences:
    label: <span class=currentUser>$currentUser</span>
    submenu:
        Logout:
            label: <span class=logout>Log Out</span>
            link: /auth/logout
        Separator1:
            label: Separator
        ChangePassword:
            label: <span class=password>Change Password</span>
            link: /user/password
            condition: return ('database' == Fisma::configuration()->getConfig('auth_type') || 'root' == $user->username);
        Notifications:
            label: <span class=emailPreferences>E-mail Notifications</span>
            link: /user/notification
        Profile:
            label: <span class=profile>My Profile</span>
            link: /user/profile
        Preferences:
            label: <span class=preferences>Preferences</span>
            link: /user/preferences
        Whatsnew:
            label: <span class=whatsnew>What\u2019s New</span>
            link: ""
            onClick: Fisma.Util.showWhatsNewDialog
            condition: return Fisma_WhatsNew::checkContents();
        Separator2:
            label: Separator
        About:
            label: <span class=openfisma>About OpenFISMA</span>
            link: http://openfisma.org/
            target: _blank
        Contact:
            label: <span class=contact>Contact Administrator</span>
            link: $mailToAdmin
            target: _blank
        Privacy:
            label: <span class=privacy>Privacy Policy</span>
            link: /auth/privacy/
        Manual:
            label: <span class=help>Online Help</span>
            link: http://manual.openfisma.org/
            target: _blank
        ROB:
            label: <span class=rob>Rules of Behavior</span>
            link: /auth/rob/
Notifications:
    label: $notificationCount
    link: ""
    onClick: Fisma.User.showNotifications
    condition: return (CurrentUser::getAttribute('Notifications')->count() > 0);
