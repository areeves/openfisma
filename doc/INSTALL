Next, you have to make sure your host is setup to run rails apps. This varies from 
host to host, so I’ll leave this step up to you. 

Quick Installation
======================================================================================
Create a database named openfisma_production (or one of your choosing). 
Copy config/database.example.yml to config/database.yml 
Edit database.yml and set your database credentials. 
Upload the entire openfisma directory to your webserver. 
Run rake db:bootstrap from a terminal of some sorts 
(use rake db:bootstrap RAILS_ENV=production to be sure you’ve bootstrapped the 
production database.) 
Login to your administration at http://domain.com/admin with the username: admin and 
password: test 
The actual web server installation varies from host to host. Openfisma should install 
like any other Rails app, however. 

Installation
======================================================================================

1. Set up the required Databases and User Permissions

Openfisma uses three databases, one for development, one for testing,
and one for production. The default database name for each environment
is the name of our application followed by an underscore followed by
the name of the environment. You may call these databases whatever
you wish. See the example below which creates the databases and
assigns permissions to different users. Generally you want a development
username and password different from the production username and password
to prevent mishaps.

mysql> GRANT SELECT,INSERT,UPDATE,DELETE,CREATE,DROP
mysql> ON openfisma_development.* TO 'openfisma_dev'@'hostname' IDENTIFIED BY 'putpasswordhere';
mysql> FLUSH PRIVILEGES;
mysql> CREATE DATABASE openfisma_development;

mysql> GRANT SELECT,INSERT,UPDATE,DELETE,CREATE,DROP
mysql> ON openfisma_test.* TO 'openfisma_test'@'hostname' IDENTIFIED BY 'putpasswordhere';
mysql> FLUSH PRIVILEGES;
mysql> CREATE DATABASE openfisma_test;

mysql> GRANT SELECT,INSERT,UPDATE,DELETE,CREATE,DROP
mysql> ON openfisma_production.* TO 'openfisma_prod'@'hostname' IDENTIFIED BY 'putpasswordhere';
mysql> FLUSH PRIVILEGES;
mysql> CREATE DATABASE openfisma_production;

2. Configuring your web server

Openfisma can run with either the Apache or the lighttpd web server, or
Mongrel. We will cover Apache as it is the most common installation. 
Apache is a great general-purpose web server. Apache works best for serving static 
content. Serving Openfisma will take a little more time to configure. To
use Apache, you’ll have to configure Openfisma to run using FCGI. Then
you’ll tell the server to forward your request to those Openfisma FCGI processes.

By default, Openfsima provides a .htaccess file for Apache in the public directory.
By default, this will run Openfisma in normal, syrup slow CGI mode. If you have 
the capability of utilizing FastCGI support, you should turn on FastCGI in .htaccess.
You’ll do so by editing the public/.htaccess file in the Openfisma directory to look 
like the following:

# Make sure the line that specifies normal CGI
# is commented out
# RewriteRule ^(.*)$ dispatch.cgi [QSA,L]
# Make sure this line is uncommented for FastCGI
RewriteRule ^(.*)$ dispatch.fcgi [QSA,L]

3. Application Setup: Openfisma Config Files

Openfisma only needs a minor amount of customization to run in production mode.

First, edit the config/database.yml with the appropriate information for the 
database you created earlier.

production:
adapter: mysql
database: openfisma_production
username: openfisma_prod
password: 12345
host: my_db.myhost.com

Openfisma was designed to run with different settings for development,
test, production, or any other environment you define. It will
use the ‘development’ environment unless told otherwise. When running
on your server, you will want ‘production’ mode to be in effect.

Uncomment the following line at the top of environment.rb:
ENV['RAILS_ENV' ] ||= 'production'

4. Set file permissions

The log directory and files must be writeable by the user running
the FastCGI process. 

The public directory must be writeable by the user running the
FastCGI process if you are using page caching. Openfisma
will run if the public directory is not writeable, but will not use
caching.

dispatch.fcgi must be executable, but not writeable by others. Properly
configured web servers will refuse to execute files if dispatch.fcgi
is writeable by the general public. dispatch.fcgi is the main file
that handles requests and fires them off to the controllers in your
application, so it must be executable.

If you have permission problems with any of these files, you can remedy
the problem with the Unix chmod command.

openfisma$ chmod 755 public/dispatch.fcgi
openfisma$ ls -l public/dispatch.fcgi
-rwxr-xr-x 1 openfisma group 855 2006-01-15 02:03 dispatch.fcgi

The rwx means that ezra can read, write, and execute the file. The first
r-x means that only others in the same group can read and execute the
file. The last r-x means anyone can read and execute, but not write the
file. This permission set is the proper setup for the dispatch.fcgi file.


Upgrading (with a downloaded copy)
======================================================================================
When upgrading, it’s usually best to install the new copy of Openfisma in a completely
separate directory. This way if something happens to go wrong, you can restore the 
database and point the web server to the old directory to continue using the older 
version.

Download Openfisma into a separate directory 
Copy config/database.yml, to the new installation. Also be sure to copy any other 
customized files you may have (such as config/environment.rb possibly). 
Backup your database just in case. 
Run rake db:migrate RAILS_ENV=production to make any necessary changes to the 
database. This will affect your current site’s database, so either take it offline, 
or perform this step on a secondary database. 
Reconfigure your web server to point to the new application. 

Upgrading (with a subversion working copy)
======================================================================================
Update from the latest svn 
Backup your database just in case. 
Run rake db:migrate RAILS_ENV=production to make any necessary changes to the database
This will affect your current site’s database, so either take it offline, or perform 
this step on a secondary database. 
Restart Openfisma and your web server if needed. 
